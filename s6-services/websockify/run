#!/usr/bin/with-contenv sh

# Ensure log directory exists
mkdir -p /app/logs

# Wait for the X server to become available before launching Selkies.
# When Selkies starts too early pynput fails to connect to the display
# which causes an ImportError and the service restarts in a loop.
if [ -n "${DISPLAY}" ]; then
  for _ in $(seq 1 30); do
    if xset q >/dev/null 2>&1; then
      break
    fi
    sleep 1
  done
fi

# Some environments disallow X MIT-SHM attachments; disable XShm in capture to avoid BadAccess
export PIXELFLUX_USE_XSHM=0
export MITSHM=0

# Prepare PulseAudio runtime (prevents race conditions / missing socket)
USER_ID="$(id -u)"
export XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-/run/user/${USER_ID}}
mkdir -p "${XDG_RUNTIME_DIR}/pulse" || true
chmod 700 "${XDG_RUNTIME_DIR}" 2>/dev/null || true

# Start a minimal PulseAudio server with a null sink so Selkies has an
# `output` device and `output.monitor` for captures even when no real
# sound hardware exists.
pulseaudio -D --exit-idle-time=-1 \
  --load="module-native-protocol-unix socket=${XDG_RUNTIME_DIR}/pulse/native auth-anonymous=1" \
  --load="module-null-sink sink_name=output" >/dev/null 2>&1 || true

# Point clients to the PulseAudio native socket and wait until ready
export PULSE_SERVER="unix:${XDG_RUNTIME_DIR}/pulse/native"

# Wait for PulseAudio to accept commands (prefer pactl; fallback to socket file)
for _ in $(seq 1 60); do
  if command -v pactl >/dev/null 2>&1; then
    if pactl -s "${PULSE_SERVER#unix:}" info >/dev/null 2>&1; then
      break
    fi
  else
    # Fallback: wait for native socket to appear
    if [ -S "${XDG_RUNTIME_DIR}/pulse/native" ]; then
      break
    fi
  fi
  sleep 0.5
done

# Ensure the null sink exists (idempotent) and select as default, also set default source to monitor
if ! pactl -s "${PULSE_SERVER#unix:}" list short sinks 2>/dev/null | awk '{print $2}' | grep -q "^output$"; then
  pactl -s "${PULSE_SERVER#unix:}" load-module module-null-sink sink_name=output >/dev/null 2>&1 || true
fi

# Select defaults (ignore errors if not present yet)
pactl -s "${PULSE_SERVER#unix:}" set-default-sink output >/dev/null 2>&1 || true
pactl -s "${PULSE_SERVER#unix:}" set-default-source output.monitor >/dev/null 2>&1 || true

# Launch Selkies in websocket mode and log to /app/logs/selkies.log
exec selkies --addr="localhost" --mode="websockets" \
    >> /app/logs/selkies.log 2>&1
