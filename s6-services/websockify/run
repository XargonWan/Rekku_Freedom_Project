#!/usr/bin/with-contenv sh

# Ensure log directory exists
mkdir -p /app/logs

# Wait for the X server to become available before launching Selkies.
# When Selkies starts too early pynput fails to connect to the display
# which causes an ImportError and the service restarts in a loop.
if [ -n "${DISPLAY}" ]; then
  for _ in $(seq 1 30); do
    if xset q >/dev/null 2>&1; then
      break
    fi
    sleep 1
  done
fi

# Start a minimal PulseAudio server with a null sink so Selkies has an
# `output` device and `output.monitor` for captures even when no real
# sound hardware exists.
pulseaudio -D --exit-idle-time=-1 \
  --load="module-null-sink sink_name=output" >/dev/null 2>&1

# Ensure clients use the PulseAudio socket we just started.
export PULSE_SERVER=unix:/run/user/$(id -u)/pulse/native

# Launch Selkies in websocket mode and log to /app/logs/selkies.log
exec selkies --addr="localhost" --mode="websockets" \
    >> /app/logs/selkies.log 2>&1
