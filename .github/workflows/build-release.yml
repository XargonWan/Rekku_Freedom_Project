name: "Rekku Freedom Project - Release"

on:
  push:
    branches:
      - "main"
      - "develop"
      - "fix/**"
      - "feat/**"
  pull_request:
    branches:
      - "main"
      - "develop"
      - "fix/**"
      - "feat/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: '5.x'

    - name: Determine version with GitVersion
      id: gitversion_build
      uses: gittools/actions/gitversion/execute@v0.9.14
      with:
        useConfigFile: true

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}

    - name: Tag image as latest (main branch only)
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }} ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:latest

  run-tests:
    runs-on: ubuntu-latest
    needs: build-and-push

    continue-on-error: true

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: '5.x'

    - name: Determine version with GitVersion
      id: gitversion_test
      uses: gittools/actions/gitversion/execute@v0.9.14
      with:
        useConfigFile: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        source venv/bin/activate
        pytest --maxfail=5 --disable-warnings

    - name: Generate Changelog
      id: changelog
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
        if [ -n "$PREV_TAG" ]; then
          git log $PREV_TAG..HEAD --oneline > changelog.txt
        else
          git log --oneline > changelog.txt
        fi
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat changelog.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.gitversion_test.outputs.semVer }}
        release_name: Release ${{ steps.gitversion_test.outputs.semVer }}
        body: |
          Changelog:
          ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ github.ref != 'refs/heads/main' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
