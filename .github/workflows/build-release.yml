name: "Rekku Freedom Project - Release"

on:
  push:
    branches:
      - "main"
      - "develop"
      - "fix/**"
      - "feat/**"
  pull_request:
    branches:
      - "main"
      - "develop"
      - "fix/**"
      - "feat/**"

jobs:
  build-and-push:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            tag_suffix: ""
            latest_tag: latest
            develop_tag: latest-develop
          - arch: arm64
            runner: ubuntu-latest-arm64
            tag_suffix: "-arm"
            latest_tag: latest-arm
            develop_tag: latest-develop-arm
    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: '5.x'

    - name: Determine version with GitVersion
      id: gitversion_build
      run: |
        output=$(dotnet-gitversion /config GitVersion.yml /output json 2>&1)
        echo "$output"
        json=$(echo "$output" | grep -m 1 '^{')
        if echo "$json" | jq empty >/dev/null 2>&1; then
          semver=$(echo "$json" | jq -r '.SemVer')
          echo "semVer=${semver}" >> "$GITHUB_OUTPUT"
        else
          echo "::error::dotnet-gitversion did not produce valid JSON"
          exit 1
        fi

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image (${{ matrix.arch }})
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/${{ matrix.arch }}
        build-args: |
          TARGETARCH=${{ matrix.arch }}
          GITVERSION_TAG=${{ steps.gitversion_build.outputs.semVer }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}${{ matrix.tag_suffix }}

    - name: Tag image as ${{ matrix.latest_tag }} (main branch only)
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}${{ matrix.tag_suffix }} ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ matrix.latest_tag }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ matrix.latest_tag }}

    - name: Tag image as ${{ matrix.develop_tag }} (develop branch only)
      if: github.ref == 'refs/heads/develop'
      run: |
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}${{ matrix.tag_suffix }} ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ matrix.develop_tag }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ matrix.develop_tag }}

    - name: Tag image for non-main and non-develop branches
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'
      run: |
        branch_name=${GITHUB_REF#refs/heads/}
        branch_name=${branch_name#refs/pull/}
        sanitized_branch_name=$(echo "$branch_name" | sed 's|/|-|g')
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}${{ matrix.tag_suffix }} ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}-$sanitized_branch_name${{ matrix.tag_suffix }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rekku_freedom_project:${{ steps.gitversion_build.outputs.semVer }}-$sanitized_branch_name${{ matrix.tag_suffix }}

  cleanup-images:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Remove dangling and old PR images from Docker Hub
        env:
          USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          repo="$USERNAME/rekku_freedom_project"
          token=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"$USERNAME\", \"password\": \"$PASSWORD\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)

          # Delete untagged images
          curl -s -H "Authorization: JWT $token" "https://hub.docker.com/v2/repositories/$repo/images?page_size=100" | \
            jq -r '.results[] | select((.digest != null) and (.tags | length == 0)) | .digest' | while read digest; do
              echo "Deleting dangling image $digest"
              curl -s -H "Authorization: JWT $token" -X DELETE "https://hub.docker.com/v2/repositories/$repo/images/$digest/"
            done

          # Delete PR tags older than two weeks
          cutoff=$(date -u -d '14 days ago' +%s)
          curl -s -H "Authorization: JWT $token" "https://hub.docker.com/v2/repositories/$repo/tags?page_size=100" | \
            jq -r '.results[] | .name + " " + .last_updated' | while read name updated; do
              if [[ "$name" == *-pr-* ]]; then
                ts=$(date -u -d "$updated" +%s)
                if [ $ts -lt $cutoff ]; then
                  echo "Deleting tag $name (older than two weeks)"
                  curl -s -H "Authorization: JWT $token" -X DELETE "https://hub.docker.com/v2/repositories/$repo/tags/$name/"
                fi
              fi
            done

